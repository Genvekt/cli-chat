name: auth service
on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'services/auth/**'
  pull_request:
    branches:
      - main
      - dev
    paths:
      - 'services/auth/**'

env:
  SERVICE_PATH: ./services/auth
  SERVICE_NAME: auth
  DOCKER_REGISTRY_LOGIN_URL: cr.selcloud.ru
  DOCKER_REGISTRY_URL: cr.selcloud.ru/genvekt-cli-chat

jobs:
  build-and-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache-dependency-path: go.sum

      - name: Build
        run: go build -C $SERVICE_PATH/cmd -o ../bin/

      - name: Test
        run: go test -C $SERVICE_PATH/cmd/ ../...

  linter:
    name: lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: v1.59

          working-directory: ${{ env.SERVICE_PATH }}

          # Optional: golangci-lint command line arguments.
          #
          # Note: By default, the `.golangci.yml` file should be at the root of the repository.
          # The location of the configuration file can be changed by using `--config=`
          args: --timeout=30m --config=../../.golangci.pipeline.yaml

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true, then all caching functionality will be completely disabled,
          #           takes precedence over all other caching options.
          skip-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

          # Optional: The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
          # install-mode: "goinstall"

  image-build-and-push:
    runs-on: ubuntu-20.04
    needs:
      - build-and-test
      - linter
    # if: github.event_name != 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        run: docker login -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} -p ${{ secrets.DOCKER_REGISTRY_PASSWORD }} $DOCKER_REGISTRY_LOGIN_URL

      - name: Set image tag
        run: echo "IMAGE_TAG=$(git rev-parse --short $GITHUB_SHA)" >> "$GITHUB_ENV"

      - name: Build and Push Docker Image
        run: |
          docker buildx create --use
          docker buildx build --no-cache --push --tag $DOCKER_REGISTRY_URL/$SERVICE_NAME:${{ env.IMAGE_TAG }} -f $SERVICE_PATH/Dockerfile .